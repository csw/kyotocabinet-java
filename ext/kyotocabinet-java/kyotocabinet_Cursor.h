/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class kyotocabinet_Cursor */

#ifndef _Included_kyotocabinet_Cursor
#define _Included_kyotocabinet_Cursor
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     kyotocabinet_Cursor
 * Method:    disable
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_kyotocabinet_Cursor_disable
  (JNIEnv *, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    accept
 * Signature: (Lkyotocabinet/Visitor;ZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_kyotocabinet_Cursor_accept
  (JNIEnv *, jobject, jobject, jboolean, jboolean);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    set_value
 * Signature: ([BZ)Z
 */
JNIEXPORT jboolean JNICALL Java_kyotocabinet_Cursor_set_1value
  (JNIEnv *, jobject, jbyteArray, jboolean);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    remove
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_kyotocabinet_Cursor_remove
  (JNIEnv *, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    get_key
 * Signature: (Z)[B
 */
JNIEXPORT jbyteArray JNICALL Java_kyotocabinet_Cursor_get_1key
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    get_value
 * Signature: (Z)[B
 */
JNIEXPORT jbyteArray JNICALL Java_kyotocabinet_Cursor_get_1value
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    get
 * Signature: (Z)[[B
 */
JNIEXPORT jobjectArray JNICALL Java_kyotocabinet_Cursor_get
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    seize
 * Signature: ()[[B
 */
JNIEXPORT jobjectArray JNICALL Java_kyotocabinet_Cursor_seize
  (JNIEnv *, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    jump
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_kyotocabinet_Cursor_jump__
  (JNIEnv *, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    jump
 * Signature: ([B)Z
 */
JNIEXPORT jboolean JNICALL Java_kyotocabinet_Cursor_jump___3B
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    jump_back
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_kyotocabinet_Cursor_jump_1back__
  (JNIEnv *, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    jump_back
 * Signature: ([B)Z
 */
JNIEXPORT jboolean JNICALL Java_kyotocabinet_Cursor_jump_1back___3B
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    step
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_kyotocabinet_Cursor_step
  (JNIEnv *, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    step_back
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_kyotocabinet_Cursor_step_1back
  (JNIEnv *, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    db
 * Signature: ()Lkyotocabinet/DB;
 */
JNIEXPORT jobject JNICALL Java_kyotocabinet_Cursor_db
  (JNIEnv *, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    error
 * Signature: ()Lkyotocabinet/Error;
 */
JNIEXPORT jthrowable JNICALL Java_kyotocabinet_Cursor_error
  (JNIEnv *, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    initialize
 * Signature: (Lkyotocabinet/DB;)V
 */
JNIEXPORT void JNICALL Java_kyotocabinet_Cursor_initialize
  (JNIEnv *, jobject, jobject);

/*
 * Class:     kyotocabinet_Cursor
 * Method:    destruct
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_kyotocabinet_Cursor_destruct
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
